#+title: Neruda config.yml file
#+author: Étienne Deparis
#+lang: en
#+description: Glossary of all possible configuration options for Neruda
#+options: ^:{}

This file explain all possible configuration options for Neruda, which
may be put in file named ~config.yml~ at the root of your static website
project. The options are listed in alphabetical order. However, they can
be put in any order in the ~config.yml~ file.

* ~author~

The ~author~ option stores the default author name of your org
files. This value is used when you create a new file. *It is not used by
the regular org mode publishing process*. You must be sure that your org
files contains an ~#+author:~ metadata field before publishing them.

This value is used in the generation of the blog index page and the main
atom feed.

* ~domain~

The domain name pointing to where your static website is expected to be
hosted. This value is used to generate absolute path to your files on
your expected host name (for example in the Atom feeds). Its value is
expected to *not* end by a slash. That is to say ~https://example.com~
is a *valid* value, while ~https://example.com/~ is not. Its default
value is an empty string.

By default, your static website is expected to be hosted at the root of
your domain name (like ~https://example.com/index.html~). If it is not
the case and your neruda static website is hosted in a sub directory of
your main website, you must add this sub folder to the ~domain~
value. Thus, ~https://example.com/example~ or
~https://example.com/complex/example~ are *valid* values too, while
~https://example.com/example/~ or ~https://example.com/complex/example/~
are not.

* ~lang~

The main locale your website will be written in. Its value must comply
with the [[https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes][ISO 639-1]] standard.

* ~public_folder~

The ~public_folder~ option stores the path to the folder, which will
contains the generated files, ready for publication. It's default value
is ~public_html~ (at the root of your project).

* ~remote~

The ~remote~ option contains an /rsync/ like destination string, which
will be used to published your website when using the ~sync:push~ /rake/
task. For exemple ~user@domain:/var/www/mywebsite/~

* ~title~

The ~title~ option stores the default title of your org files. This value
is used when you create a new file. *It is not used by the regular org
mode publishing process*. You must be sure that your org files contains
an ~#+title:~ metadata field before publishing them.

This value is used in the generation of the blog index page and the main
atom feed.

* ~sources~

The ~sources~ option stores an array of all source folders, where your
org files to be published are. This allow you to gather various
different places (even at some absolute path in your computer) in your
website.

Each source listed in that array is an object, which must use the
following keys:

- path :: [string] path to the folder containing the file to exports
- name :: [string, optional] key used to generate the org-mode project name.
  Defaults to the last dirname of the path value.
- recursive :: [boolean, optional] wether the path should be exported
  recursively. Defaults to True
- exclude :: [string, optional] Regexp of files to not export for this
  projects. Default to nothing (no files to exclude).
- target :: [string, optional] Path where to put the exported files,
  relative to the ~public_folder~ folder. Default to the project name at
  the root of the ~public_folder~ folder.
- is_blog :: [boolean, optional] Whether this project should be
  considered as a blog and thus, serves as source to generate blog
  index, tags indexes and atom feeds.
- theme :: [string, optional] Theme name to use for this
  project. Defaults to “default”.
