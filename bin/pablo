#!/usr/bin/env ruby
# coding: utf-8
# frozen_string_literal: true

require 'optparse'
require 'neruda/config'
require 'neruda/version'

# Methods used with pablo init method
module PabloInit
  def init_path
    public_path = Neruda::Config.settings['public_folder'] || 'public_html'
    FileUtils.mkdir_p "#{public_path}/assets"
    local_blog_path = Neruda::Config.settings['blog_slug'] || 'blog'
    FileUtils.mkdir_p "src/#{local_blog_path}"
  end

  def init_config
    config = Neruda::Config.settings.merge
    changed = false
    if config['author'].nil? || config['author'] == ''
      puts "Your author name: "
      author = STDIN.gets.strip
      if author != ''
        config['author'] = author
        changed = true
      end
    end
    if config['lang'].nil? || config['lang'] == ''
      puts "Main language of your website [en]: "
      lang = STDIN.gets.strip
      lang = 'en' if lang == ''
      config['lang'] = lang
      changed = true
    end
    if changed
      Neruda::Config.save(config)
    else
      warn 'Already configured'
    end
  end

  def init_rakefile
    return if File.exist? 'Rakefile'
    rakefile = <<~RAKE
      # frozen_string_literal: true

      require 'neruda/config'
      require 'r18n-core'

      R18n.set(Neruda::Config.settings['lang'] || 'en')

      neruda_spec = Gem::Specification.find_by_name 'neruda'
      Dir.glob("\#{neruda_spec.gem_dir}/lib/tasks/*.rake").each { |r| import r }

      task default: 'site:build'
    RAKE
    File.open('Rakefile', 'w') do |f|
      f.puts rakefile
    end
  end
end

# Main pablo class
class Pablo
  def initialize
    @options = {
      verbose: false
    }
    @available_commands = ['install', 'init', 'new', 'edit']
    parse_options
    # Be sure required directories are always there
    init_path
    ARGV.shift
    send @arg
  end

  private

  def handle_aliases
    @arg = ARGV[0]
    if @arg == 'new'
      @arg = 'edit'
    elsif @arg == 'init'
      @arg = 'install'
    end
  end

  def parse_options
    optparse = OptionParser.new do |opts|
      opts.banner = <<~HELP
        Usage:
            pablo -h
            pablo [ -v ] command

      HELP
      opts.version = Neruda::VERSION
      opts.on('-v', '--verbose', 'Output more information') do
        @options[:verbose] = true
      end
      opts.on('-h', '--help', 'Display this screen') do
        warn opts
        warn
        pablo_help
      end
      opts.on('-V', '--version', 'Show version') do
        puts opts.ver
      end
    end

    optparse.parse!

    handle_aliases

    if !File.exist?('config.yml') && @arg != 'install'
      warn 'ERROR: please run pablo setup before all'
      exit 1
    end
    return if @available_commands.include?(@arg)
    warn 'ERROR: no or unknown command given.'
    warn 'Run pablo -h for options and available commands'
    exit 1
  end

  include PabloInit

  def pablo_help
    warn <<~HELP
      System Commands
          install         Initialize your Neruda instance
                          (you just need to do it once).
    HELP
    exit
  end

  def install
    init_config
    init_rakefile
    cmd = ['rake', 'org:install']
    cmd.insert(1, '-s') unless @options[:verbose]
    joined_cmd = cmd.join(' ')
    puts joined_cmd if @options[:verbose]
    system joined_cmd
  end
end

Pablo.new
